import React, { useState, useEffect } from 'react'
import Button from '../components/ui/Button'
import Input, { Select } from '../components/ui/Input'
import ProductList from '../components/product/ProductList'
import { fetchProducts } from '../services/products.service'
import { fetchFavorites } from '../services/favorites.service'
import toast from 'react-hot-toast'

const BRANDS = [
  { label: 'Nike', value: 'nike' },
  { label: 'Adidas', value: 'adidas' },
  { label: 'New Balance', value: 'new-balance' },
  { label: 'Puma', value: 'puma' },
  { label: 'Reebok', value: 'reebok' },
  { label: 'Vans', value: 'vans' },
  { label: 'Converse', value: 'converse' },
  { label: 'ASICS', value: 'asics' },
]
const CATEGORIES = [
  { label: '–ë–µ–≥–æ–≤—ã–µ', value: 'running' },
  { label: '–ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–µ', value: 'basketball' },
  { label: '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–µ', value: 'lifestyle' },
  { label: '–°–∫–µ–π—Ç–±–æ—Ä–¥–∏–Ω–≥', value: 'skateboarding' },
  { label: '–¢–µ–Ω–Ω–∏—Å–Ω—ã–µ', value: 'tennis' },
]
const SIZES = [
  { label: '36', value: '36' }, { label: '37', value: '37' }, { label: '38', value: '38' },
  { label: '39', value: '39' }, { label: '40', value: '40' }, { label: '41', value: '41' },
  { label: '42', value: '42' }, { label: '43', value: '43' }, { label: '44', value: '44' },
  { label: '45', value: '45' }, { label: '46', value: '46' },
]
const SORTS = [
  { label: '–ü–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏', value: 'popular' },
  { label: '–°–Ω–∞—á–∞–ª–∞ –¥–µ—à–µ–≤—ã–µ', value: 'price-asc' },
  { label: '–°–Ω–∞—á–∞–ª–∞ –¥–æ—Ä–æ–≥–∏–µ', value: 'price-desc' },
  { label: '–ù–æ–≤–∏–Ω–∫–∏', value: 'new' },
]

const CatalogPage = () => {
  // –§–∏–ª—å—Ç—Ä—ã (–∑–∞–≥–ª—É—à–∫–∞)
  const [filters, setFilters] = useState({
    brand: '',
    category: '',
    size: '',
    priceFrom: '',
    priceTo: '',
    sort: 'popular',
  })
  const [products, setProducts] = useState([])
  const [favorites, setFavorites] = useState([])
  const [loading, setLoading] = useState(true)

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
  useEffect(() => {
    setLoading(true)
    fetchProducts()
      .then(setProducts)
      .finally(() => setLoading(false))
  }, [])

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–∑–∞–≥–ª—É—à–∫–∞, userId = null)
  useEffect(() => {
    // fetchFavorites(userId).then(setFavorites)
    setFavorites([])
  }, [])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleChange = (name, value) => {
    setFilters((prev) => ({ ...prev, [name]: value }))
  }

  // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã –∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  const handleAddToCart = (product) => {
    toast('–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É: ...')
  }
  const handleToggleFavorite = (product) => {
    toast('–ò–∑–±—Ä–∞–Ω–Ω–æ–µ: ...')
  }

  return (
    <div className="max-w-7xl mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-8 text-gray-900">–ö–∞—Ç–∞–ª–æ–≥ –∫—Ä–æ—Å—Å–æ–≤–æ–∫</h1>
      <div className="flex flex-col md:flex-row gap-8">
        {/* Filters */}
        <aside className="w-full md:w-64 bg-white rounded-xl shadow p-6 mb-6 md:mb-0">
          <h2 className="text-lg font-semibold mb-4">–§–∏–ª—å—Ç—Ä—ã</h2>
          <div className="space-y-4">
            <Select
              label="–ë—Ä–µ–Ω–¥"
              options={[{ label: '–í—Å–µ', value: '' }, ...BRANDS]}
              value={filters.brand}
              onChange={e => handleChange('brand', e.target.value)}
            />
            <Select
              label="–ö–∞—Ç–µ–≥–æ—Ä–∏—è"
              options={[{ label: '–í—Å–µ', value: '' }, ...CATEGORIES]}
              value={filters.category}
              onChange={e => handleChange('category', e.target.value)}
            />
            <Select
              label="–†–∞–∑–º–µ—Ä"
              options={[{ label: '–í—Å–µ', value: '' }, ...SIZES]}
              value={filters.size}
              onChange={e => handleChange('size', e.target.value)}
            />
            <div className="flex gap-2">
              <Input
                label="–¶–µ–Ω–∞ –æ—Ç"
                type="number"
                min={0}
                value={filters.priceFrom}
                onChange={e => handleChange('priceFrom', e.target.value)}
                inputClassName="pr-2"
              />
              <Input
                label="–¥–æ"
                type="number"
                min={0}
                value={filters.priceTo}
                onChange={e => handleChange('priceTo', e.target.value)}
                inputClassName="pr-2"
              />
            </div>
            <Button variant="secondary" fullWidth onClick={() => setFilters({ brand: '', category: '', size: '', priceFrom: '', priceTo: '', sort: 'popular' })}>
              –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
            </Button>
          </div>
        </aside>

        {/* Catalog */}
        <section className="flex-1">
          <div className="flex flex-col sm:flex-row sm:items-center justify-between mb-6 gap-4">
            <div className="text-gray-500 text-sm">–ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <span className="font-semibold">{products.length}</span></div>
            <Select
              label="–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞"
              options={SORTS}
              value={filters.sort}
              onChange={e => handleChange('sort', e.target.value)}
              className="w-56"
            />
          </div>

          {/* Products grid */}
          {loading ? (
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
              {[...Array(8)].map((_, i) => (
                <div key={i} className="bg-white rounded-xl shadow p-4 flex flex-col items-center">
                  <div className="w-32 h-32 bg-gray-100 rounded-lg mb-3 flex items-center justify-center">
                    <span className="text-gray-300 text-5xl">üëü</span>
                  </div>
                  <div className="h-4 w-24 bg-gray-200 rounded mb-2 animate-pulse" />
                  <div className="h-4 w-16 bg-gray-100 rounded mb-2 animate-pulse" />
                  <Button size="small" variant="secondary" className="mt-2 w-full">
                    –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                  </Button>
                </div>
              ))}
            </div>
          ) : (
            <ProductList
              products={products}
              onAddToCart={handleAddToCart}
              onToggleFavorite={handleToggleFavorite}
              favorites={favorites}
            />
          )}

          {/* Pagination (–∑–∞–≥–ª—É—à–∫–∞) */}
          <div className="flex justify-center mt-10">
            <Button variant="ghost" disabled>
              &lt;
            </Button>
            <span className="mx-4 text-gray-600">1 –∏–∑ 1</span>
            <Button variant="ghost" disabled>
              &gt;
            </Button>
          </div>
        </section>
      </div>
    </div>
  )
}

export default CatalogPage

